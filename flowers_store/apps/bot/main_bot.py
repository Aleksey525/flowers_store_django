import telebot
from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist
from flowers_store.apps.bot.models import Event, Bouquet, Order, Memory
from telebot import types


bot = telebot.TeleBot(settings.BOT_TOKEN)


def get_bouquets(price):
    click = Memory.objects.all().first()

    bouquets = Bouquet.objects.filter(price__lte=price, events__title=click.click_event)

    Memory.objects.all().delete()
    return bouquets



@bot.message_handler(commands=['start'])
def hear_menu(message):
    inline_markup = types.InlineKeyboardMarkup()
    inline_markup.add(types.InlineKeyboardButton(text='–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è', callback_data='prefix:–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è'))
    inline_markup.add(types.InlineKeyboardButton(text='–°–≤–∞–¥—å–±–∞', callback_data='prefix:–°–≤–∞–¥—å–±–∞'))
    inline_markup.add(types.InlineKeyboardButton(text='–í —à–∫–æ–ª—É', callback_data='prefix:–í —à–∫–æ–ª—É'))
    inline_markup.add(types.InlineKeyboardButton(text='–ë–µ–∑ –ø–æ–≤–æ–¥–∞', callback_data='prefix:–ë–µ–∑ –ø–æ–≤–æ–¥–∞'))
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç!\n–ö –∫–∞–∫–æ–º—É —Å–æ–±—ã—Ç–∏—é –≥–æ—Ç–æ–≤–∏–º—Å—è? –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤,',
                     reply_markup=inline_markup)


@bot.callback_query_handler(func=lambda call: call.data.split(":")[1] in ['–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è', '–°–≤–∞–¥—å–±–∞', '–í —à–∫–æ–ª—É', '–ë–µ–∑ –ø–æ–≤–æ–¥–∞'])
def query_handler(call):
    bot.answer_callback_query(callback_query_id=call.id)
    inline_markup = types.InlineKeyboardMarkup()
    data_ = call.data.split(":")[1]
    Memory.objects.create(click_event=data_)
    inline_markup.add(types.InlineKeyboardButton(text='500', callback_data="prefix2:500"))
    inline_markup.add(types.InlineKeyboardButton(text='1000', callback_data="prefix2:1000"))
    inline_markup.add(types.InlineKeyboardButton(text='2000', callback_data="prefix2:2000"))
    inline_markup.add(types.InlineKeyboardButton(text='–±–æ–ª—å—à–µ', callback_data="prefix2:–±–æ–ª—å—à–µ"))
    inline_markup.add(types.InlineKeyboardButton(text='–Ω–µ –≤–∞–∂–Ω–æ', callback_data="prefix2:–Ω–µ –≤–∞–∂–Ω–æ"))
    inline_markup.add(types.InlineKeyboardButton(text='üëà –Ω–∞–∑–∞–¥ üëà', callback_data="prefix2:–Ω–∞–∑–∞–¥"))
    bot.edit_message_text('–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?', call.message.chat.id, call.message.message_id,
                                  reply_markup=inline_markup)


@bot.callback_query_handler(func=lambda call: call.data.split(":")[0] == "prefix2")
def querry_handler2(call):
    data_ = call.data.split(":")[1]
    if data_ == "500":
        bouquets = get_bouquets(data_)
        for bouquet in bouquets:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç', callback_data=f'prefix3:{bouquet.id}'))
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="prefix3:–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"))
            keyboard.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é', callback_data="prefix3:–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é"))
            bot.send_photo(call.message.chat.id, bouquet.photo, bouquet.description, reply_markup=keyboard)

    elif data_ == "1000":
        bouquets = get_bouquets(data_)
        for bouquet in bouquets:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç', callback_data=f'prefix3:{bouquet.id}'))
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="prefix3:–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"))
            keyboard.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é', callback_data="prefix3:–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é"))
            bot.send_photo(call.message.chat.id, bouquet.photo, bouquet.description, reply_markup=keyboard)

    elif data_ == "2000":
        bouquets = get_bouquets(data_)
        for bouquet in bouquets:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç', callback_data=f'prefix3:{bouquet.id}'))
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="prefix3:–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"))
            keyboard.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é', callback_data="prefix3:–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é"))
            bot.send_photo(call.message.chat.id, bouquet.photo, bouquet.description, reply_markup=keyboard)

    elif data_ == "–±–æ–ª—å—à–µ":
        click = Memory.objects.all().first()
        bouquets = Bouquet.objects.filter(price__gt='2000', events__title=click.click_event)
        for bouquet in bouquets:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç', callback_data=f'prefix3:{bouquet.id}'))
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="prefix3:–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"))
            keyboard.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é', callback_data="prefix3:–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é"))
            bot.send_photo(call.message.chat.id, bouquet.photo, bouquet.description, reply_markup=keyboard)

    elif data_ == "–Ω–µ –≤–∞–∂–Ω–æ":
        bouquets = Bouquet.objects.all()
        for bouquet in bouquets:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç', callback_data=f'prefix3:{bouquet.id}'))
            keyboard.add(types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data="prefix3:–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"))
            bot.send_photo(call.message.chat.id, bouquet.photo, bouquet.description, reply_markup=keyboard)


    elif data_ == "–Ω–∞–∑–∞–¥":
        inline_markup = types.InlineKeyboardMarkup()
        inline_markup.add(types.InlineKeyboardButton(text='–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è', callback_data='prefix:–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è'))
        inline_markup.add(types.InlineKeyboardButton(text='–°–≤–∞–¥—å–±–∞', callback_data='prefix:–°–≤–∞–¥—å–±–∞'))
        inline_markup.add(types.InlineKeyboardButton(text='–í —à–∫–æ–ª—É', callback_data='prefix:–í —à–∫–æ–ª—É'))
        inline_markup.add(types.InlineKeyboardButton(text='–ë–µ–∑ –ø–æ–≤–æ–¥–∞', callback_data='prefix:–ë–µ–∑ –ø–æ–≤–æ–¥–∞'))
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=inline_markup)


@bot.callback_query_handler(func=lambda call: call.data.split(":")[0] == "prefix3")
def querry_handler3(call):
    data_ = call.data.split(":")[1]
    if data_.isdigit():
        bouquet = Bouquet.objects.get(id=int(data_))
        bouquet_order = Order.objects.create(bouquet=bouquet)
        bouquet_order.save()
        bot.send_message(call.message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')


@bot.message_handler(content_types=['text'])
def callback_order(message):
    if message:
        bot.register_next_step_handler(message, save_username)


def get_consulting(message):
    chat_id = 1180965200
    bot.send_message(chat_id, f'–Ω–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞: {message.text}')


def save_username(message):
    order = Order.objects.last()
    order.client_name = message.text
    order.save()
    name = message.text
    chat_id = message.chat.id
    bot.send_message(chat_id,
                     f'–û—Ç–ª–∏—á–Ω–æ, {name}. –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å')
    bot.register_next_step_handler(message, save_address)


def save_address(message):
    order = Order.objects.last()
    order.address = message.text
    order.save()
    chat_id = message.chat.id
    bot.send_message(chat_id,
                     f'–û—Ç–ª–∏—á–Ω–æ, –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏')
    bot.register_next_step_handler(message, save_date)


def save_date(message):
    order = Order.objects.last()
    order.date = message.text
    chat_id = message.chat.id
    order.save()
    bot.send_message(chat_id,
                     f'–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏')
    bot.register_next_step_handler(message, save_time_send_deliver)


def save_time_send_deliver(message):
    order = Order.objects.last()
    order.time = message.text
    order.save()
    bot.send_message(message.chat.id,
                     f'–û—Ç–ª–∏—á–Ω–æ, –∑–∞–∫–∞–∑ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω')
    chat_id = 6113251330
    bot.send_message(chat_id ,f'–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {order.client_name}\n–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: {order.date}\n–ê–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞: {order.address}\n–î–æ—Å—Ç–∞–≤–∏—Ç—å –∫: {order.time}',
                     )

